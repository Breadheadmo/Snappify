{"ast":null,"code":"var _jsxFileName = \"/Users/randmgroupptyltd/Ecom/client/src/contexts/CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(undefined);\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      {\n        const existingItem = state.items.find(item => item.product.id === action.payload.id);\n        if (existingItem) {\n          const newQuantity = existingItem.quantity + (action.quantity || 1);\n          const updatedItems = state.items.map(item => item.product.id === action.payload.id ? {\n            ...item,\n            quantity: newQuantity\n          } : item);\n          return {\n            ...state,\n            items: updatedItems,\n            total: updatedItems.reduce((sum, item) => sum + item.product.price * item.quantity, 0),\n            itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n          };\n        } else {\n          const newItem = {\n            product: action.payload,\n            quantity: action.quantity || 1\n          };\n          const newItems = [...state.items, newItem];\n          return {\n            ...state,\n            items: newItems,\n            total: newItems.reduce((sum, item) => sum + item.product.price * item.quantity, 0),\n            itemCount: newItems.reduce((sum, item) => sum + item.quantity, 0)\n          };\n        }\n      }\n    case 'REMOVE_ITEM':\n      {\n        const updatedItems = state.items.filter(item => item.product.id !== action.payload);\n        return {\n          ...state,\n          items: updatedItems,\n          total: updatedItems.reduce((sum, item) => sum + item.product.price * item.quantity, 0),\n          itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n        };\n      }\n    case 'UPDATE_QUANTITY':\n      {\n        const updatedItems = state.items.map(item => item.product.id === action.payload.productId ? {\n          ...item,\n          quantity: action.payload.quantity\n        } : item);\n        return {\n          ...state,\n          items: updatedItems,\n          total: updatedItems.reduce((sum, item) => sum + item.product.price * item.quantity, 0),\n          itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n        };\n      }\n    case 'CLEAR_CART':\n      {\n        return {\n          ...state,\n          items: [],\n          total: 0,\n          itemCount: 0\n        };\n      }\n    case 'LOAD_CART':\n      {\n        const items = action.payload;\n        return {\n          ...state,\n          items,\n          total: items.reduce((sum, item) => sum + item.product.price * item.quantity, 0),\n          itemCount: items.reduce((sum, item) => sum + item.quantity, 0)\n        };\n      }\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  items: [],\n  total: 0,\n  itemCount: 0\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        dispatch({\n          type: 'LOAD_CART',\n          payload: parsedCart\n        });\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state.items));\n  }, [state.items]);\n  const addToCart = (product, quantity = 1) => {\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: product,\n      quantity\n    });\n  };\n  const removeFromCart = productId => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: productId\n    });\n  };\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n    } else {\n      dispatch({\n        type: 'UPDATE_QUANTITY',\n        payload: {\n          productId,\n          quantity\n        }\n      });\n    }\n  };\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  };\n  const isInCart = productId => {\n    return state.items.some(item => item.product.id === productId);\n  };\n  const getCartItem = productId => {\n    return state.items.find(item => item.product.id === productId);\n  };\n  const value = {\n    state,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    isInCart,\n    getCartItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","CartContext","undefined","cartReducer","state","action","type","existingItem","items","find","item","product","id","payload","newQuantity","quantity","updatedItems","map","total","reduce","sum","price","itemCount","newItem","newItems","filter","productId","initialState","CartProvider","children","_s","dispatch","savedCart","localStorage","getItem","parsedCart","JSON","parse","error","console","setItem","stringify","addToCart","removeFromCart","updateQuantity","clearCart","isInCart","some","getCartItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["/Users/randmgroupptyltd/Ecom/client/src/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport type { Product, CartItem } from '../types/Product';\n\ninterface CartState {\n  items: CartItem[];\n  total: number;\n  itemCount: number;\n}\n\ntype CartAction =\n  | { type: 'ADD_ITEM'; payload: Product; quantity?: number }\n  | { type: 'REMOVE_ITEM'; payload: number }\n  | { type: 'UPDATE_QUANTITY'; payload: { productId: number; quantity: number } }\n  | { type: 'CLEAR_CART' }\n  | { type: 'LOAD_CART'; payload: CartItem[] };\n\nconst CartContext = createContext<{\n  state: CartState;\n  addToCart: (product: Product, quantity?: number) => void;\n  removeFromCart: (productId: number) => void;\n  updateQuantity: (productId: number, quantity: number) => void;\n  clearCart: () => void;\n  isInCart: (productId: number) => boolean;\n  getCartItem: (productId: number) => CartItem | undefined;\n} | undefined>(undefined);\n\nconst cartReducer = (state: CartState, action: CartAction): CartState => {\n  switch (action.type) {\n    case 'ADD_ITEM': {\n      const existingItem = state.items.find(item => item.product.id === action.payload.id);\n      \n      if (existingItem) {\n        const newQuantity = existingItem.quantity + (action.quantity || 1);\n        const updatedItems = state.items.map(item =>\n          item.product.id === action.payload.id\n            ? { ...item, quantity: newQuantity }\n            : item\n        );\n        \n        return {\n          ...state,\n          items: updatedItems,\n          total: updatedItems.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),\n          itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n        };\n      } else {\n        const newItem: CartItem = {\n          product: action.payload,\n          quantity: action.quantity || 1\n        };\n        \n        const newItems = [...state.items, newItem];\n        \n        return {\n          ...state,\n          items: newItems,\n          total: newItems.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),\n          itemCount: newItems.reduce((sum, item) => sum + item.quantity, 0)\n        };\n      }\n    }\n    \n    case 'REMOVE_ITEM': {\n      const updatedItems = state.items.filter(item => item.product.id !== action.payload);\n      \n      return {\n        ...state,\n        items: updatedItems,\n        total: updatedItems.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),\n        itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n      };\n    }\n    \n    case 'UPDATE_QUANTITY': {\n      const updatedItems = state.items.map(item =>\n        item.product.id === action.payload.productId\n          ? { ...item, quantity: action.payload.quantity }\n          : item\n      );\n      \n      return {\n        ...state,\n        items: updatedItems,\n        total: updatedItems.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),\n        itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n      };\n    }\n    \n    case 'CLEAR_CART': {\n      return {\n        ...state,\n        items: [],\n        total: 0,\n        itemCount: 0\n      };\n    }\n    \n    case 'LOAD_CART': {\n      const items = action.payload;\n      \n      return {\n        ...state,\n        items,\n        total: items.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),\n        itemCount: items.reduce((sum, item) => sum + item.quantity, 0)\n      };\n    }\n    \n    default:\n      return state;\n  }\n};\n\nconst initialState: CartState = {\n  items: [],\n  total: 0,\n  itemCount: 0\n};\n\nexport const CartProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        dispatch({ type: 'LOAD_CART', payload: parsedCart });\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state.items));\n  }, [state.items]);\n\n  const addToCart = (product: Product, quantity: number = 1) => {\n    dispatch({ type: 'ADD_ITEM', payload: product, quantity });\n  };\n\n  const removeFromCart = (productId: number) => {\n    dispatch({ type: 'REMOVE_ITEM', payload: productId });\n  };\n\n  const updateQuantity = (productId: number, quantity: number) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n    } else {\n      dispatch({ type: 'UPDATE_QUANTITY', payload: { productId, quantity } });\n    }\n  };\n\n  const clearCart = () => {\n    dispatch({ type: 'CLEAR_CART' });\n  };\n\n  const isInCart = (productId: number): boolean => {\n    return state.items.some(item => item.product.id === productId);\n  };\n\n  const getCartItem = (productId: number): CartItem | undefined => {\n    return state.items.find(item => item.product.id === productId);\n  };\n\n  const value = {\n    state,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    isInCart,\n    getCartItem\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}