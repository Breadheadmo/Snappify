version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: snappy-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - snappy-network

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: snappy-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - snappy-network

  # Main Application
  app:
    build: .
    container_name: snappy-app
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      NODE_ENV: production
      PORT: 5001
      MONGO_URI: mongodb://admin:${MONGO_PASSWORD}@mongodb:27017/snappy?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: 30d
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      PAYSTACK_SECRET_KEY: ${PAYSTACK_SECRET_KEY}
      PAYSTACK_PUBLIC_KEY: ${PAYSTACK_PUBLIC_KEY}
      PAYSTACK_WEBHOOK_SECRET: ${PAYSTACK_WEBHOOK_SECRET}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - snappy-network
    volumes:
      - uploads:/app/server/uploads

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: snappy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - uploads:/var/www/uploads
    depends_on:
      - app
    networks:
      - snappy-network

volumes:
  mongodb_data:
  redis_data:
  uploads:

networks:
  snappy-network:
    driver: bridge
